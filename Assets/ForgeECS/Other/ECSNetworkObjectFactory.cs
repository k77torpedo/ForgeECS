using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using BeardedManStudios.Forge.Networking;
using BeardedManStudios.Forge.Networking.Frame;
using BeardedManStudios.Forge.Networking.Generated;
using BeardedManStudios.Forge.Networking.Unity;
using System;

public class ECSNetworkObjectFactory : NetworkObjectFactoryBase {
    //Fields
    NetworkObjectFactory forgeGeneratedFactory = new NetworkObjectFactory();


    //Functions
    public override void NetworkCreateObject (NetWorker networker, int identity, uint id, FrameStream frame, Action<NetworkObject> callback) {
        //First handle our logic
        if (identity == ECSNetworkObject.IDENTITY) {
            if (networker.IsServer) {
                if (frame.Sender != null && frame.Sender != networker.Me) {
                    if (!ValidateCreateRequest(networker, identity, id, frame))
                        return;
                }
            }

            MainThreadManager.Run(() => {
                NetworkObject obj = new ECSNetworkObject(networker, id, frame);
                if (callback != null) {
                    callback(obj);
                }
            });
        } else {
            //If we didnt found something it might be a NetworkObject that is generated by forge and not our custom.
            forgeGeneratedFactory.NetworkCreateObject(networker, identity, id, frame, callback);
        }
    }
}
